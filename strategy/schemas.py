from datetime import datetime
from typing import Optional

from pydantic import BaseModel, Field

class StrategyTradeSignal(BaseModel):
    """
    Represents a trade signal generated by a strategy.
    """
    strategy_id: str = Field(..., description="Identifier of the strategy generating the signal.")
    symbol: str = Field(..., description="Trading symbol (e.g., 'BTC/USD').")
    side: str = Field(..., description="Side of the trade (e.g., 'buy', 'sell').")
    quantity: float = Field(..., description="Quantity to trade.")
    order_type: str = Field(..., description="Type of order (e.g., 'market', 'limit').")
    price: Optional[float] = Field(None, description="Price for limit orders.")
    timestamp: datetime = Field(..., description="Timestamp of when the signal was generated (UTC).")

    class Config:
        from_attributes = True
        json_encoders = {
            datetime: lambda v: v.isoformat().replace('+00:00', 'Z') if v.tzinfo else v.isoformat() + 'Z'
        }