name: Auth Service Tests

on:
  push:
    branches: [ main ]
    paths: [ 'auth-service/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'auth-service/**' ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r auth-service/requirements.txt
        pip install pytest pytest-cov locust bandit safety
    - name: Run unit tests with coverage
      run: |
        cd auth-service
        pytest tests/unit --cov=. --cov-report=xml --cov-fail-under=90
    - name: Run integration tests
      run: |
        cd auth-service
        pytest tests/integration -v
    - name: Run security tests
      run: |
        cd auth-service
        pytest tests/security -v
        bandit -r .
        safety check
    - name: Run performance tests
      run: |
        cd auth-service
        pytest tests/performance -v
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: auth-service/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
    - name: Archive test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          auth-service/.coverage
          auth-service/test-results.xml