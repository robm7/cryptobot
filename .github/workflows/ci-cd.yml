name: Cryptobot CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  REGISTRY: docker.io
  IMAGE_PREFIX: ${{ secrets.DOCKER_HUB_USERNAME }}/cryptobot

jobs:
  build-test-push:
    name: Build, Test and Push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ["auth", "backtest", "data", "strategy", "trade", "dashboard"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and test Docker image
        working-directory: ./${{ matrix.service }}
        run: |
          docker build --tag ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:latest .
          # Add test commands specific to each service here
          # Example: docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:latest pytest

      - name: Push Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:latest

  deploy:
    name: Deploy to Kubernetes
    needs: build-test-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" > ~/.kube/config
          chmod 600 ~/.kube/config
        env:
          KUBE_CONFIG: ${{ env.KUBE_CONFIG }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/
          # Add rollout status checks for each service
          # Example: kubectl rollout status deployment/cryptobot-auth

  notify:
    name: Notify
    needs: [build-test-push, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_TITLE: "Cryptobot CI/CD Pipeline"
          SLACK_MESSAGE: "Pipeline ${{ job.status }} for commit ${{ github.sha }}"