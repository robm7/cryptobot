name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pytest pytest-cov pytest-asyncio
    - name: Run unit tests with coverage
      run: |
        pytest tests/unit/ --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-test
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: cryptobot
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: cryptobot_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install pytest pytest-cov pytest-asyncio
    - name: Build mock exchange service
      run: |
        cd tests/integration/services/mock_exchange
        pip install -r requirements.txt
        python -m uvicorn app:app --host 0.0.0.0 --port 8000 &
        sleep 5
    - name: Run integration tests
      run: |
        python tests/integration/run_integration_tests.py --env ci --junit-xml=integration-test-results.xml
      env:
        DB_URL: postgresql://cryptobot:testpassword@localhost:5432/cryptobot_test
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        EXCHANGE_URL: http://localhost:8000
        TEST_ENV: ci
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: integration-test-results
        path: integration-test-results.xml