apiVersion: apps/v1
kind: Deployment
metadata:
  name: dashboard-service
  labels:
    app: cryptobot
    tier: frontend
    service: dashboard
spec:
  replicas: 3  # Increased to ensure at least one pod per AZ
  selector:
    matchLabels:
      app: cryptobot
      tier: frontend
      service: dashboard
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cryptobot
        tier: frontend
        service: dashboard
    spec:
      # Node affinity to distribute pods across multiple availability zones
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: Exists
        # Pod anti-affinity to ensure pods don't run on the same node
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - dashboard
              topologyKey: kubernetes.io/hostname
          # Distribute pods across zones
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: service
                operator: In
                values:
                - dashboard
            topologyKey: topology.kubernetes.io/zone
      # Topology spread constraints to evenly distribute pods across zones
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            service: dashboard
      # Tolerations for zone-specific taints
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoSchedule
        tolerationSeconds: 300
      containers:
      - name: dashboard-service
        image: cryptobot/dashboard:latest
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: dashboard-config
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5