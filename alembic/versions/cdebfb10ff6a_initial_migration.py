"""Initial migration

Revision ID: cdebfb10ff6a
Revises: 
Create Date: 2025-05-03 23:14:15.828677

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cdebfb10ff6a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('strategies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parameters', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('backtest_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('timeframe', sa.String(length=10), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('initial_capital', sa.Float(), nullable=False),
    sa.Column('final_capital', sa.Float(), nullable=False),
    sa.Column('return_pct', sa.Float(), nullable=False),
    sa.Column('total_trades', sa.Integer(), nullable=False),
    sa.Column('win_rate', sa.Float(), nullable=False),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('max_drawdown', sa.Float(), nullable=True),
    sa.Column('profit_factor', sa.Float(), nullable=True),
    sa.Column('avg_win', sa.Float(), nullable=True),
    sa.Column('avg_loss', sa.Float(), nullable=True),
    sa.Column('avg_trade_duration', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=20), nullable=False),
    sa.Column('trade_type', sa.String(length=10), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('profit_loss', sa.Float(), nullable=True),
    sa.Column('is_backtest', sa.Boolean(), nullable=True),
    sa.Column('backtest_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['backtest_id'], ['backtest_results.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategies.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('backtest_result')
    op.drop_table('trade')
    op.drop_table('user')
    op.drop_table('strategy')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('strategy',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('parameters', sa.TEXT(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=256), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('trade',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=20), nullable=False),
    sa.Column('trade_type', sa.VARCHAR(length=10), nullable=False),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('price', sa.FLOAT(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('strategy_id', sa.INTEGER(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('profit_loss', sa.FLOAT(), nullable=True),
    sa.Column('is_backtest', sa.BOOLEAN(), nullable=True),
    sa.Column('backtest_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['backtest_id'], ['backtest_result.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategy.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('backtest_result',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('strategy_id', sa.INTEGER(), nullable=True),
    sa.Column('symbol', sa.VARCHAR(length=20), nullable=False),
    sa.Column('timeframe', sa.VARCHAR(length=10), nullable=False),
    sa.Column('start_date', sa.DATETIME(), nullable=False),
    sa.Column('end_date', sa.DATETIME(), nullable=False),
    sa.Column('initial_capital', sa.FLOAT(), nullable=False),
    sa.Column('final_capital', sa.FLOAT(), nullable=False),
    sa.Column('return_pct', sa.FLOAT(), nullable=False),
    sa.Column('total_trades', sa.INTEGER(), nullable=False),
    sa.Column('win_rate', sa.FLOAT(), nullable=False),
    sa.Column('sharpe_ratio', sa.FLOAT(), nullable=True),
    sa.Column('max_drawdown', sa.FLOAT(), nullable=True),
    sa.Column('profit_factor', sa.FLOAT(), nullable=True),
    sa.Column('avg_win', sa.FLOAT(), nullable=True),
    sa.Column('avg_loss', sa.FLOAT(), nullable=True),
    sa.Column('avg_trade_duration', sa.FLOAT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategy.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('trades')
    op.drop_table('backtest_results')
    op.drop_table('strategies')
    op.drop_table('users')
    # ### end Alembic commands ###
